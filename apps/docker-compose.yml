version: "3.8"

x-stack-environment: &stack-environment
  CLUSTER_NAME: $CLUSTER_NAME
  NEXT_PUBLIC_CLUSTER_NAME: $CLUSTER_NAME

networks:
  traefik-net:
    name: traefik-net
    external: true

services:
  website:
    image: ghcr.io/linearmouse/website:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.website.rule=Host(`$ROOT_DOMAIN`)
        - traefik.http.routers.website.service=website
        - traefik.http.services.website.loadbalancer.server.port=3000
      update_config:
        delay: 10s
        order: start-first
    restart: unless-stopped

  shorturl:
    image: ghcr.io/linearmouse/shorturl:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.shorturl.rule=Host(`go.$ROOT_DOMAIN`)
        - traefik.http.routers.shorturl.service=shorturl
        - traefik.http.services.shorturl.loadbalancer.server.port=3000
      update_config:
        delay: 10s
        order: start-first
    restart: unless-stopped

  appcast:
    image: ghcr.io/linearmouse/appcast:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
      GITHUB_TOKEN: $GITHUB_TOKEN
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.appcast.rule=Host(`$ROOT_DOMAIN`) && Path(`/appcast.xml`)
        - traefik.http.routers.appcast.service=appcast
        - traefik.http.services.appcast.loadbalancer.server.port=3000
      update_config:
        delay: 10s
        order: start-first
    restart: unless-stopped

  schema:
    image: ghcr.io/linearmouse/schema:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.schema.rule=Host(`schema.$ROOT_DOMAIN`)
        - traefik.http.routers.schema.service=schema
        - traefik.http.services.schema.loadbalancer.server.port=3000
      update_config:
        delay: 10s
        order: start-first
    restart: unless-stopped
