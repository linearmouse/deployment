version: "3.8"

x-stack-environment: &stack-environment
  CLUSTER_NAME: $CLUSTER_NAME

x-deploy-defaults: &deploy-defaults
  update_config:
    delay: 10s
    order: start-first
  restart_policy:
    condition: on-failure

networks:
  traefik-net:
    name: traefik-net
    external: true

services:
  website:
    image: ${GHCR_MIRROR:-ghcr.io}/linearmouse/website:production-$CLUSTER_NAME
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      <<: *deploy-defaults
      labels:
        traefik.enable: "true"
        traefik.http.routers.website.rule: Host(`$ROOT_DOMAIN`, `www.$ROOT_DOMAIN`)
        traefik.http.routers.website.service: website
        traefik.http.services.website.loadbalancer.server.port: "3000"
        traefik.http.routers.website.middlewares: strip-www
        traefik.http.middlewares.strip-www.redirectregex.permanent: "true"
        traefik.http.middlewares.strip-www.redirectregex.regex: ^(https?://)www\.
        traefik.http.middlewares.strip-www.redirectregex.replacement: $${1}

  shorturl:
    image: ${GHCR_MIRROR:-ghcr.io}/linearmouse/shorturl:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      <<: *deploy-defaults
      labels:
        traefik.enable: "true"
        traefik.http.routers.shorturl.rule: Host(`go.$ROOT_DOMAIN`)
        traefik.http.routers.shorturl.service: shorturl
        traefik.http.services.shorturl.loadbalancer.server.port: "3000"

  appcast:
    image: ${GHCR_MIRROR:-ghcr.io}/linearmouse/appcast:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
      GITHUB_TOKEN: $GITHUB_TOKEN
    deploy:
      <<: *deploy-defaults
      labels:
        traefik.enable: "true"
        traefik.http.routers.appcast.rule: Host(`$ROOT_DOMAIN`) && Path(`/appcast.xml`)
        traefik.http.routers.appcast.service: appcast
        traefik.http.services.appcast.loadbalancer.server.port: "3000"

  schema:
    image: ${GHCR_MIRROR:-ghcr.io}/linearmouse/schema:main
    networks:
      - default
      - traefik-net
    environment:
      <<: *stack-environment
    deploy:
      <<: *deploy-defaults
      labels:
        traefik.enable: "true"
        traefik.http.routers.schema.rule: Host(`schema.$ROOT_DOMAIN`)
        traefik.http.routers.schema.service: schema
        traefik.http.services.schema.loadbalancer.server.port: "3000"
