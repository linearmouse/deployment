version: "3.8"

volumes:
  acme_data:

networks:
  traefik-net:
    name: traefik-net
    driver: overlay
    attachable: true
  monitoring:
    name: monitoring
    driver: overlay
    attachable: true

services:
  traefik:
    image: traefik:v2.9
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=$CLOUDFLARE_DNS_API_TOKEN
    command:
      - --api.insecure
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode
      - --providers.docker.network=traefik-net
      - --accesslog
      - --log
      - --metrics.prometheus
      - --entrypoints.web.address=:80
      - --entryPoints.web.forwardedheaders.trustedips=$TRUSTED_IPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.forwardedheaders.trustedips=$TRUSTED_IPS
      - --entrypoints.websecure.http.tls
      - --entrypoints.websecure.http.tls.certresolver=zerossl
      - --entrypoints.websecure.http.tls.domains[0].main=$ROOT_DOMAIN
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$ROOT_DOMAIN
      - --certificatesresolvers.zerossl.acme.email=lujjjh@gmail.com
      - --certificatesresolvers.zerossl.acme.storage=/acme/zerossl.json
      - --certificatesresolvers.zerossl.acme.dnschallenge
      - --certificatesresolvers.zerossl.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.zerossl.acme.caserver=https://acme.zerossl.com/v2/DV90
      - --certificatesresolvers.zerossl.acme.eab.kid=$ZEROSSL_ACME_EAB_KID
      - --certificatesresolvers.zerossl.acme.eab.hmacencoded=$ZEROSSL_ACME_EAB_HMACENCODED
    networks:
      - traefik-net
      - monitoring
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acme_data:/acme
    deploy:
      placement:
        constraints:
          - node.role == manager

  shepherd:
    image: mazzolino/shepherd
    environment:
      SLEEP_TIME: 1m
      FILTER_SERVICES: label=shepherd.enable=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager

  whoami:
    image: traefik/whoami
    networks:
      - default
      - traefik-net
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.whoami.rule: Host(`whoami.$ROOT_DOMAIN`)
        traefik.http.services.whoami.loadbalancer.server.port: "80"
      update_config:
        delay: 10s
        order: start-first
